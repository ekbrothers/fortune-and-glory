name: Archaeological Site Detection

on:
  workflow_dispatch:  # Allows manual triggering
  push:
    branch:
      - main

jobs:
  detect-sites:
    runs-on: ubuntu-latest
   
    steps:
    # First, we get our code from the repository
    - uses: actions/checkout@v4
   
    # We'll use Node.js instead of Python because it's the natural environment for JavaScript
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'  # Using a stable LTS version
   
    # Install the Earth Engine JavaScript library
    - name: Install Dependencies
      run: |
        npm init -y  # Create a package.json file
        npm install @google/earthengine
   
    # Set up our authentication just like before
    - name: Setup Authentication
      run: |
        mkdir -p key
        echo '${{ secrets.EE_SERVICE_ACCOUNT_JSON }}' > key/gee-key.json

    # Create a small JavaScript wrapper to run our detection script
    - name: Create Runner Script
      run: |
        echo 'const ee = require("@google/earthengine");
        const fs = require("fs");
        
        // Read our credentials
        const privateKey = require("./key/gee-key.json");
        
        // Read our detection script
        const detectionScript = fs.readFileSync("./src/detection.js", "utf8");
        
        // Initialize Earth Engine
        ee.authenticateViaPrivateKey(privateKey, () => {
          ee.initialize(() => {
            // Now run our script
            eval(detectionScript);
            console.log("Detection script started!");
          });
        });' > runner.js
   
    # Run our detection script through Node.js
    - name: Run Detection
      run: node runner.js
   
    # Clean up our credentials as before
    - name: Cleanup
      if: always()
      run: rm -rf key